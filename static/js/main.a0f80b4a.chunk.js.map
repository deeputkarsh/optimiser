{"version":3,"sources":["serviceWorker.js","utils/auth.js","utils/auth_effects.js","utils/routeChangeEffect.js","interceptor.js","redux/appActions.js","redux/snackbarActions.js","services/optimiser_service.js","redux/loginActions.js","redux/strategyActions.js","redux/summaryActions.js","redux/strategyRollUpActions.js","redux/configureStore.js","components/Header.js","routes/login/index.js","routes/not_found/index.js","routes/create_strategy/constraints.js","routes/create_strategy/strategy_checkbox.js","routes/create_strategy/index.js","routes/summary/strategy_input.js","routes/summary/forcast_results.js","routes/summary/index.js","routes/strategy_roll_up/sku_level_strategy_summary.js","routes/strategy_roll_up/class_level_strategy_summary.js","routes/strategy_roll_up/index.js","routes/index.js","index.js"],"names":["Boolean","window","location","hostname","match","authToken","getLogoutEffect","history","isLoggedIn","_","push","Auth","token","LocalStorageHelper","register","getToken","deregister","undefined","btoa","atob","localStorage","encodedObj","setItem","clear","user","getItem","getRouteChangeEffect","onRouteChange","listen","action","console","log","pathname","handleError","store","error","response","data","timestamp","Date","now","status","axios","interceptors","request","use","config","headers","setBearerAuth","Authorization","Promise","reject","defaultState","route","createActions","ON_ROUTE_CHANGE","ON_LOGIN","ON_LOGOUT","prefix","onLogin","onLogout","AppAction","handleActions","combineActions","state","payload","open","SHOW","HIDE","show","hide","SnackbarAction","USER_END_POINT","process","LOGIN_API_ENDPOINT","USER_API","LOGIN","LOGOUT","SIGNUP","GET_USER_DATA","UPDATE_PROFILE","optimiserAPI","credentials","message","Axios","get","summaryList","strategyRollUpSummaryList","strategyInput","WOS","maxStep","maxDisc","minStep","minDisc","forecastResults","erosion","EOH","EOHUnits","avgOBDisc","salesUnits","COGS","recoveryRate","classLevelSummary","className","classDesc","skuLevelSummary","SKU","SKUDesc","username","password","FETCH_LOGOUT","a","async","FETCH_LOGIN","form","fetchLogin","fetchLogout","onInputChange","LoginAction","login","dispatch","cred","then","catch","logout","minimizeErosion","clearInventory","clearOldAgeProductFirst","strategyName","strategyClass","strategyWOS","strategyConstraints","constraintType","constraintValue","UPDATE_STRATEGY","GET_STRATEGY","id","updateStrategy","getStrategy","CreateStrategyAction","update","getSummary","GET_SUMMARY","summaryAction","getSkuLevelSummary","GET_SKU_LEVEL_SUMMARY","strategySummaryRollUpAction","rootReducer","combineReducers","appStore","loginStore","strategyData","snackbarStore","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","thunk","createLogger","createStore","Header","connect","React","useState","anchorEl","setAnchorEl","handleClose","to","onClick","event","currentTarget","Menu","keepMounted","onClose","MenuItem","mapdispatchtoprops","showError","props","useEffect","fieldName","value","target","FormControl","TextField","name","label","variant","type","placeholder","required","onChange","e","onKeyUp","keyCode","Button","color","size","length","Grid","container","justify","spacing","item","xs","Paper","CONSTRAINT_TYPES","constraintTypeList","setConstraintList","selected","filter","map","unSelectList","includes","onConstraintChange","index","option","newList","defaultObj","splice","key","Constraint","InputLabel","Select","labelId","labelWidth","disabled","onCheck","checked","Checkbox","inputProps","RenderSummaryItem","sm","lg","wrap","snackbarStatus","snackbarText","handleSnackbarClose","basename","exact","path","component","Login","NotFound","CreateStrategy","Summary","StrategyRollUpSummary","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","theme","createMuiTheme","palette","primary","main","secondary","interceptor","renderDom","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0f80b4a.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.')\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl) // eslint-disable-line no-undef\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","let authToken\r\nexport const Auth = {\r\n  register: (token) => {\r\n    authToken = token\r\n    LocalStorageHelper.register(authToken)\r\n  },\r\n\r\n  isLoggedIn: () => {\r\n    return !!authToken || !!LocalStorageHelper.getToken()\r\n  },\r\n\r\n  deregister: () => {\r\n    LocalStorageHelper.deregister()\r\n    authToken = undefined\r\n  },\r\n\r\n  getToken: () => {\r\n    let token = ''\r\n    authToken = authToken || LocalStorageHelper.getToken()\r\n    if (authToken) {\r\n      token = 'Bearer ' + authToken\r\n    }\r\n    return token\r\n  }\r\n}\r\n\r\nconst { btoa, atob, localStorage } = window || {}\r\nconst LocalStorageHelper = {\r\n  register (token) {\r\n    const encodedObj = token ? btoa(token) : ''\r\n    localStorage.setItem('USER', encodedObj)\r\n  },\r\n  deregister () {\r\n    localStorage.clear()\r\n  },\r\n  getToken () {\r\n    let user = localStorage.getItem('USER') || ''\r\n    if (user) {\r\n      user = user ? atob(user) : ''\r\n    }\r\n    return user\r\n  }\r\n}\r\n","export const getLogoutEffect = (history, isLoggedIn) => _ => {\r\n  if (!isLoggedIn) {\r\n    history.push('/login')\r\n  }\r\n}\r\n","export const getRouteChangeEffect = (history, onRouteChange) => _ => history.listen((location, action) => {\r\n  console.log('HISTORY', action, location.pathname)\r\n  onRouteChange(location.pathname)\r\n})\r\n","import axios from 'axios'\r\nimport { Auth } from './utils'\r\n\r\n// const localStorage = window.localStorage\r\n\r\nconst setupInterceptors = store => {\r\n  axios.interceptors.request.use(\r\n    config => {\r\n      config.headers['content-type'] = 'application/json'\r\n      if (config.headers.setBearerAuth) {\r\n        config.headers.Authorization = Auth.getToken()\r\n        delete config.headers.setBearerAuth\r\n      }\r\n      // change any global config on request\r\n      // store.dispatch(showLoader())\r\n      return config\r\n    },\r\n    error => {\r\n      // Do something with request error\r\n      // store.dispatch(hideLoader())\r\n      handleError(store, error)\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  axios.interceptors.response.use(\r\n    config => {\r\n      if (config.status === 200) {\r\n        console.log(config)\r\n        // change something on response success\r\n        // store.dispatch(showLoader())\r\n        return config\r\n      }\r\n    },\r\n    error => {\r\n      // store.dispatch(hideLoader())\r\n      handleError(store, error)\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n}\r\nconst handleError = (store, error) => {\r\n  const err = error.response ? error.response.data : error\r\n  err.timestamp = Date.now()\r\n  if (error && error.response && error.response.status === 406) {\r\n    /* localStorage.clear()\r\n    window.location.href = '/' */\r\n  }\r\n  /* if (\r\n    (err.statusCode === 500 &&\r\n      err.message === 'INTERNAL SERVER ERROR: jwt expired!!') ||\r\n    err.statusCode === 401\r\n  ) {\r\n    store.dispatch(errorHandler(err))\r\n    store.dispatch(clearAuth())\r\n  } else {\r\n    store.dispatch(errorHandler(err))\r\n  } */\r\n}\r\n\r\nexport default {\r\n  setupInterceptors\r\n}\r\n","import { createActions, handleActions, combineActions } from 'redux-actions'\r\nimport { Auth } from '../utils'\r\n\r\nconst defaultState = { route: '', isLoggedIn: Auth.isLoggedIn() }\r\n\r\nconst { onLogin, onLogout, onRouteChange } = createActions({\r\n  ON_ROUTE_CHANGE: route => { return { route: route } },\r\n  ON_LOGIN: token => { Auth.register(token); return {} },\r\n  ON_LOGOUT: _ => { Auth.deregister(); return {} }\r\n}, { prefix: 'APP' })\r\nexport const AppAction = { onLogin, onLogout, onRouteChange }\r\n\r\nexport default handleActions({ [combineActions(onLogin, onLogout, onRouteChange)]: (state, { payload }) => ({ ...state, ...payload, isLoggedIn: Auth.isLoggedIn() }) }, defaultState)\r\n","import { createActions, handleActions, combineActions } from 'redux-actions'\r\n\r\nconst defaultState = { open: false }\r\nconst { show, hide } = createActions({\r\n  SHOW: (data = '') => ({ data, open: true }),\r\n  HIDE: _ => defaultState\r\n})\r\n\r\nexport const SnackbarAction = { show, hide }\r\n\r\nexport default handleActions({ [combineActions(show, hide)]: (state, { payload }) => payload }, defaultState)\r\n","import Axios from 'axios'\r\n\r\nconst USER_END_POINT = process.env.LOGIN_API_ENDPOINT + '/user'\r\nconst USER_API = {\r\n  LOGIN: USER_END_POINT + '/login',\r\n  LOGOUT: USER_END_POINT + '/logout',\r\n  SIGNUP: USER_END_POINT + '/signup',\r\n  GET_USER_DATA: USER_END_POINT + '/',\r\n  UPDATE_PROFILE: USER_END_POINT + '/updateProfile'\r\n}\r\n\r\nexport const optimiserAPI = {\r\n\r\n  login (credentials) {\r\n    return { data: { token: 'psadadj', message: 'Logged In Successfully' } }\r\n    // const Authorization = `Basic ${credentials}`\r\n    // return Axios.get(USER_API.LOGIN, { headers: { Authorization } })\r\n  },\r\n\r\n  getStrategyData () {\r\n    return Axios.get(USER_API.SIGNUP, { headers: { setBearerAuth: true } })\r\n  },\r\n\r\n  getSummaryList () {\r\n    return { data: summaryList }\r\n    // return Axios.get(USER_API.SIGNUP, { headers: { setBearerAuth: true } })\r\n  },\r\n\r\n  getStrategyRollUpSummary () {\r\n    return { data: strategyRollUpSummaryList }\r\n    // return Axios.get(USER_API.SIGNUP, { headers: { setBearerAuth: true } })\r\n  },\r\n\r\n  updateStrategy (data) {\r\n    const newSummary = {\r\n      strategyInput: {\r\n        WOS: 8,\r\n        maxStep: 5,\r\n        maxDisc: 50,\r\n        minStep: 5,\r\n        minDisc: 5\r\n      },\r\n      forecastResults: {\r\n        WOS: 5,\r\n        erosion: 751549.67,\r\n        EOH: 27300769,\r\n        EOHUnits: 3,\r\n        avgOBDisc: 10,\r\n        salesUnits: 4,\r\n        COGS: 200,\r\n        recoveryRate: 200\r\n      }\r\n    }\r\n    summaryList.push(newSummary)\r\n    return { data: { message: 'Saved Successfully' } }\r\n    // return Axios.post(USER_API.UPDATE_PROFILE, userData, { headers: { setBearerAuth: true } })\r\n  },\r\n\r\n  logout () {\r\n    return { data: { message: 'Logged Out Successfully' } }\r\n    // return Axios.get(USER_API.LOGOUT, { headers: { setBearerAuth: true } })\r\n  }\r\n}\r\n\r\nconst strategyRollUpSummaryList = [{\r\n  classLevelSummary: {\r\n    className: '140 - className',\r\n    classDesc: 'Samsung TV\\'s',\r\n    avgOBDisc: 50,\r\n    erosion: 7769,\r\n    WOS: 10,\r\n    EOH: 7869,\r\n    EOHUnits: 324,\r\n    salesUnits: 8970,\r\n    COGS: 5575,\r\n    recoveryRate: 3897\r\n  },\r\n  skuLevelSummary: {\r\n    SKU: 786789,\r\n    SKUDesc: 'Samsung - 43\" Class-LED',\r\n    avgOBDisc: 47,\r\n    erosion: 7769,\r\n    WOS: 10,\r\n    EOH: 7869,\r\n    EOHUnits: 324,\r\n    salesUnits: 8970,\r\n    COGS: 5575,\r\n    recoveryRate: 3897\r\n  }\r\n}]\r\n\r\nconst summaryList = []\r\n","import { createActions, handleActions, combineActions } from 'redux-actions'\r\nimport { SnackbarAction } from './snackbarActions'\r\nimport { optimiserAPI } from '../services'\r\nimport { AppAction } from './appActions'\r\n\r\nconst defaultState = { username: '', password: '' }\r\nconst login = ({ username, password }) => dispatch => {\r\n  const cred = window.btoa(`${username}:${password}`)\r\n  dispatch(fetchLogin(cred)).then(({ payload }) => {\r\n    dispatch(AppAction.onLogin(payload.token))\r\n    dispatch(SnackbarAction.show(payload.message))\r\n    dispatch(onInputChange(defaultState))\r\n  }).catch(error => {\r\n    const { response = { data: { error: 'Something went wrong' } } } = error\r\n    dispatch(SnackbarAction.show(response.data.error))\r\n  })\r\n}\r\nconst logout = _ => dispatch => {\r\n  dispatch(fetchLogout()).then(({ payload }) => {\r\n    dispatch(AppAction.onLogout())\r\n    dispatch(SnackbarAction.show(payload.message))\r\n    dispatch(onInputChange(defaultState))\r\n  }).catch(error => {\r\n    const { response = { data: { error: 'Something went wrong' } } } = error\r\n    dispatch(SnackbarAction.show(response.data.error))\r\n  })\r\n}\r\nconst { fetchLogin, fetchLogout, onInputChange } = createActions({\r\n  FETCH_LOGOUT: async _ => {\r\n    const response = await optimiserAPI.logout()\r\n    return response.data\r\n  },\r\n  FETCH_LOGIN: async (form) => {\r\n    const response = await optimiserAPI.login(form)\r\n    return response.data// 'Logged in successfully!!'\r\n  }\r\n}, 'ON_INPUT_CHANGE', { prefix: 'LOGIN' })\r\nexport const LoginAction = { login, logout, onInputChange }\r\n\r\nexport default handleActions({ [combineActions(onInputChange)]: (state, { payload }) => ({ ...state, ...payload }) }, defaultState)\r\n","import { createActions, handleActions, combineActions } from 'redux-actions'\r\nimport { SnackbarAction } from './snackbarActions'\r\nimport { optimiserAPI } from '../services'\r\n\r\nconst defaultState = {\r\n  minimizeErosion: true,\r\n  clearInventory: false,\r\n  clearOldAgeProductFirst: false,\r\n  strategyName: '',\r\n  strategyClass: 140,\r\n  strategyWOS: 5,\r\n  strategyConstraints: [{ constraintType: '', constraintValue: '' }]\r\n}\r\n\r\nconst update = data => dispatch => {\r\n  dispatch(updateStrategy(data)).then(({ payload }) => {\r\n    dispatch(SnackbarAction.show(payload))\r\n    dispatch(onInputChange(defaultState))\r\n  }).catch(error => {\r\n    const { response = { data: { error: 'Something went wrong' } } } = error\r\n    dispatch(SnackbarAction.show(response.data.error))\r\n  })\r\n}\r\nconst { updateStrategy, getStrategy, onInputChange } = createActions({\r\n  UPDATE_STRATEGY: async (form) => {\r\n    const response = await optimiserAPI.updateStrategy(form)\r\n    console.log(response)\r\n    return response.data.message // 'Update successful!!'\r\n  },\r\n  GET_STRATEGY: async (id) => {\r\n    const response = await optimiserAPI.getStrategyData(id)\r\n    return response.data\r\n  }\r\n}, 'ON_INPUT_CHANGE', { prefix: 'STRATEGY' })\r\nexport const CreateStrategyAction = { update, getStrategy, onInputChange }\r\n\r\nexport default handleActions({ [combineActions(onInputChange)]: (state, { payload }) => ({ ...state, ...payload }) }, defaultState)\r\n","import { createActions, handleActions, combineActions } from 'redux-actions'\r\nimport { optimiserAPI } from '../services'\r\n\r\nconst defaultState = []\r\n\r\nconst { getSummary } = createActions({\r\n  GET_SUMMARY: async _ => {\r\n    const response = await optimiserAPI.getSummaryList()\r\n    return response.data\r\n  }\r\n}, { prefix: 'SUMMARY' })\r\nexport const summaryAction = { getSummary }\r\n\r\nexport default handleActions({ [combineActions(getSummary)]: (state, { payload }) => payload }, defaultState)\r\n","import { createActions, handleActions, combineActions } from 'redux-actions'\r\nimport { optimiserAPI } from '../services'\r\n\r\nconst defaultState = []\r\n\r\nconst { getSkuLevelSummary } = createActions({\r\n  GET_SKU_LEVEL_SUMMARY: async _ => {\r\n    const response = await optimiserAPI.getStrategyRollUpSummary()\r\n    return response.data\r\n  }\r\n}, { prefix: 'ROLLUP' })\r\nexport const strategySummaryRollUpAction = { getSkuLevelSummary }\r\n\r\nexport default handleActions({ [combineActions(getSkuLevelSummary)]: (state, { payload }) => payload }, defaultState)\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { createLogger } from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport promiseMiddleware from 'redux-promise'\r\n\r\nimport appStore from './appActions'\r\nimport snackbarStore from './snackbarActions'\r\nimport loginStore from './loginActions'\r\nimport strategyData from './strategyActions'\r\nimport summaryList from './summaryActions'\r\nimport strategyRollUpSummaryList from './strategyRollUpActions'\r\n\r\nconst rootReducer = combineReducers({\r\n  appStore,\r\n  loginStore,\r\n  strategyData,\r\n  summaryList,\r\n  strategyRollUpSummaryList,\r\n  snackbarStore\r\n})\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n  promiseMiddleware,\r\n  thunk,\r\n  createLogger()\r\n)(createStore)\r\n\r\nexport function configureStore (initialState) {\r\n  const store = createStoreWithMiddleware(rootReducer, initialState)\r\n  return store\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport DehazeIcon from '@material-ui/icons/Dehaze'\r\nimport { Menu, MenuItem } from '@material-ui/core'\r\nimport { LoginAction } from '../redux'\r\n\r\nconst Component = ({ isLoggedIn, logout }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n\r\n  const handleClick = event => setAnchorEl(event.currentTarget)\r\n\r\n  const handleClose = () => setAnchorEl(null)\r\n  const logOut = () => {\r\n    handleClose()\r\n    logout()\r\n  }\r\n\r\n  return (\r\n    <header className='header-wrapper'>\r\n      <Link className='menu-link' to='/create_strategy'><div className='logo-container' /></Link>\r\n      <div className='menu-container'>\r\n        {isLoggedIn && <DehazeIcon onClick={handleClick} />}\r\n        <Menu\r\n          id='simple-menu'\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n          className='menu-container'\r\n        >\r\n          <MenuItem onClick={handleClose}><Link className='menu-link' to='/create_strategy'>Create Strategy</Link></MenuItem>\r\n          <MenuItem onClick={handleClose}><Link className='menu-link' to='/summary'>Optimisation Summary</Link></MenuItem>\r\n          <MenuItem onClick={handleClose}><Link className='menu-link' to='/strategy_roll_up'>Strategy Roll up</Link></MenuItem>\r\n          <MenuItem onClick={logOut}>Log out</MenuItem>\r\n        </Menu>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ appStore: { isLoggedIn } }) => ({ isLoggedIn })\r\nconst { logout } = LoginAction\r\nexport const Header = connect(mapStateToProps, { logout })(Component)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { TextField, FormControl, Button } from '@material-ui/core'\r\n\r\nimport { LoginAction, AppAction, SnackbarAction } from '../../redux'\r\n\r\nimport { getRouteChangeEffect } from '../../utils'\r\n\r\nconst Login = (props) => {\r\n  useEffect(() => { isLoggedIn && props.history.push('/create_strategy') })\r\n  useEffect(getRouteChangeEffect(props.history, props.onRouteChange))\r\n  const { username, password, isLoggedIn } = props\r\n\r\n  const onInputChange = ({ target: { value } }, fieldName) => {\r\n    props.onInputChange({ [fieldName]: value })\r\n  }\r\n\r\n  const onLoginClick = (event) => {\r\n    if (username.length <= 0 || password.length <= 0) {\r\n      return props.showError('Enter valid mobile & password')\r\n    }\r\n    props.login({ username, password })\r\n  }\r\n  const onPasswordEnter = event => (event.keyCode === 13) && props.login({ username, password })\r\n\r\n  return (\r\n    <div className='login-content'>\r\n      <form className='login-form'>\r\n        <FormControl className='form-control'>\r\n          <TextField\r\n            name='username'\r\n            label='User Name'\r\n            variant='outlined'\r\n            type='text'\r\n            placeholder='User Name'\r\n            className='login-input'\r\n            required\r\n            value={username}\r\n            onChange={e => onInputChange(e, 'username')}\r\n          />\r\n        </FormControl>\r\n        <FormControl className='form-control'>\r\n          <TextField\r\n            name='password'\r\n            label='Password'\r\n            variant='outlined'\r\n            type='password'\r\n            placeholder='Password'\r\n            className='login-input'\r\n            required\r\n            value={password}\r\n            onChange={e => onInputChange(e, 'password')}\r\n            onKeyUp={onPasswordEnter}\r\n          />\r\n        </FormControl>\r\n      </form>\r\n      <Button\r\n        color='primary'\r\n        size='large'\r\n        variant='contained'\r\n        className='login-arrow'\r\n        onClick={onLoginClick}\r\n      >Login\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ loginStore, appStore: { isLoggedIn } }) => ({ ...loginStore, isLoggedIn })\r\n\r\nconst { onInputChange, login } = LoginAction\r\nconst mapdispatchtoprops = {\r\n  login,\r\n  onInputChange,\r\n  showError: SnackbarAction.show,\r\n  onRouteChange: AppAction.onRouteChange\r\n}\r\nexport default connect(mapStateToProps, mapdispatchtoprops)(Login)\r\n","import React, { useEffect } from 'react'\r\nimport { Grid, Paper } from '@material-ui/core'\r\n\r\nimport { getRouteChangeEffect } from '../../utils'\r\nimport { AppAction } from '../../redux'\r\nimport { connect } from 'react-redux'\r\n\r\nconst NotFound = props => {\r\n  useEffect(getRouteChangeEffect(props.history, props.onRouteChange))\r\n  return (\r\n    <Grid container justify='center' spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Paper className='not-found' />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\nexport default connect(null, { onRouteChange: AppAction.onRouteChange })(NotFound)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Grid, FormControl, TextField, InputLabel, Select, MenuItem } from '@material-ui/core'\r\nimport Delete from '@material-ui/icons/Delete'\r\n\r\nconst CONSTRAINT_TYPES = ['Max Discount %', 'Min Discount %', 'Step Change Discount %']\r\n\r\nexport default function (props) {\r\n  const { strategyConstraints, onInputChange } = props\r\n  const [constraintTypeList, setConstraintList] = useState([])\r\n  useEffect(() => {\r\n    const selected = strategyConstraints.filter(({ constraintType }) => !!constraintType).map(item => item.constraintType)\r\n    const unSelectList = CONSTRAINT_TYPES.filter(item => !selected.includes(item))\r\n    setConstraintList(unSelectList)\r\n  }, [strategyConstraints])\r\n  const onConstraintChange = (data, index, option) => {\r\n    const newList = [...strategyConstraints]\r\n    const defaultObj = { constraintType: '', constraintValue: '' }\r\n    console.log(option)\r\n    if (option === 'pushConstraint' && strategyConstraints.length < 3) {\r\n      newList.push(defaultObj)\r\n    }\r\n    if (option === 'delete') {\r\n      newList.splice(index, 1)\r\n      if (newList.length < 1) { newList.push(defaultObj) }\r\n    } else { newList.splice(index, 1, data) }\r\n    onInputChange({ strategyConstraints: newList })\r\n  }\r\n\r\n  const renderConstraints = _ => strategyConstraints.map((item, index) => (\r\n    <Constraint\r\n      key={`${index}-${item.type}`}\r\n      index={index}\r\n      {...item}\r\n      constraintTypeList={constraintTypeList}\r\n      onConstraintChange={onConstraintChange}\r\n    />\r\n  ))\r\n  return (\r\n    <Grid container>\r\n      {renderConstraints()}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst Constraint = props => {\r\n  const { constraintType, constraintTypeList, index, constraintValue, onConstraintChange } = props\r\n\r\n  const onInputChange = ({ target: { value } }, fieldName) => {\r\n    const option = (constraintType === '' && value && fieldName === 'constraintType') ? 'pushConstraint' : ''\r\n    onConstraintChange({ constraintType, constraintValue, [fieldName]: value }, index, option)\r\n  }\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={6}>\r\n        <FormControl variant='outlined' className='form-control'>\r\n          <InputLabel id='demo-simple-select-outlined-label'>Constraints</InputLabel>\r\n          <Select\r\n            labelId='demo-simple-select-outlined-label'\r\n            id='demo-simple-select-outlined'\r\n            labelWidth={72}\r\n            value={constraintType}\r\n            onChange={e => onInputChange(e, 'constraintType')}\r\n          >\r\n            {constraintType && <MenuItem key={constraintType} value={constraintType}>{constraintType}</MenuItem>}\r\n            {constraintTypeList.map(item => {\r\n              return (<MenuItem key={item} value={item}>{item}</MenuItem>)\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={5} className='contraint-value'>\r\n        <FormControl className='form-control'>\r\n          <TextField\r\n            name='strategy constraint'\r\n            label='Value'\r\n            variant='outlined'\r\n            type='text'\r\n            placeholder={constraintType}\r\n            className='{styles.loginInput}'\r\n            required\r\n            disabled={!constraintType}\r\n            value={constraintValue}\r\n            onChange={e => onInputChange(e, 'constraintValue')}\r\n          />\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={1} className='delete-container' onClick={e => onConstraintChange(null, index, 'delete')}>\r\n        <Delete />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Grid,  Checkbox, InputLabel } from '@material-ui/core'\r\n\r\nexport default (props) => {\r\n  const { minimizeErosion, clearInventory, clearOldAgeProductFirst, onInputChange } = props\r\n  const onCheck = ({ target:{ checked } }, fieldName)=>{\r\n    onInputChange({ [fieldName]: !!checked })\r\n  }\r\n  return (\r\n    <Grid container>\r\n      <InputLabel>Strategy : </InputLabel>\r\n      <Grid container className='checkbox-container'>\r\n        <Grid item>\r\n          <InputLabel className='checkbox-label'>\r\n            <Checkbox\r\n              checked={minimizeErosion}\r\n              value='Minimise Errosion'\r\n              color='primary'\r\n              disabled\r\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n              />\r\n            <span>Minimise Errosion</span>\r\n          </InputLabel>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel className='checkbox-label'>\r\n            <Checkbox\r\n              checked={clearInventory}\r\n              onChange={ e => onCheck(e,'clearInventory') }\r\n              value='Clear Inventory'\r\n              color='primary'\r\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n              />\r\n            <span>Clear Inventory</span>\r\n          </InputLabel>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel className='checkbox-label'>\r\n            <Checkbox\r\n              checked={clearOldAgeProductFirst}\r\n              onChange={ e => onCheck(e,'clearOldAgeProductFirst') }\r\n              value='Clear Old Age Product First'\r\n              color='primary'\r\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n              />\r\n            <span>Clear Old Age Product First</span>\r\n          </InputLabel>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Paper, TextField, FormControl, Button, InputLabel, Select, MenuItem, Grid } from '@material-ui/core'\r\nimport { CreateStrategyAction, AppAction, SnackbarAction } from '../../redux'\r\nimport { getRouteChangeEffect, getLogoutEffect } from '../../utils'\r\nimport Constraints from './constraints'\r\nimport StrategyCheckbox from './strategy_checkbox'\r\n\r\nconst CreateEditStrategy = (props) => {\r\n  const { strategyName, strategyClass, strategyWOS, strategyConstraints, minimizeErosion, clearInventory, clearOldAgeProductFirst, isLoggedIn } = props\r\n  useEffect(getLogoutEffect(props.history, isLoggedIn), [isLoggedIn])\r\n  useEffect(getRouteChangeEffect(props.history, props.onRouteChange))\r\n\r\n  const onInputChange = ({ target: { value } }, fieldName) => {\r\n    props.onInputChange({ [fieldName]: value })\r\n  }\r\n\r\n  const onSaveClick = (event) => {\r\n    if (strategyName.length <= 0 || strategyClass.length <= 0) {\r\n      return props.showError('Enter valid strategyName & strategyClass')\r\n    }\r\n    props.update({ strategyName, strategyClass, strategyWOS, strategyConstraints, minimizeErosion, clearInventory, clearOldAgeProductFirst })\r\n    props.history.push('/summary')\r\n  }\r\n\r\n  return (\r\n    <Paper className='create-strategy'>\r\n      <form className='strategy-form'>\r\n        <Grid item xs={12}>\r\n          <FormControl className='form-control'>\r\n            <TextField\r\n              name='strategy name'\r\n              label='Name'\r\n              variant='outlined'\r\n              type='text'\r\n              placeholder='Create a name'\r\n              required\r\n              value={strategyName}\r\n              onChange={e => onInputChange(e, 'strategyName')}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <FormControl variant='outlined' className='form-control'>\r\n            <InputLabel id='strategy-class-select-label'> Class </InputLabel>\r\n            <Select\r\n              labelId='strategy-class-select-label'\r\n              id='strategy-class-select'\r\n              labelWidth={37}\r\n              value={strategyClass}\r\n              onChange={e => onInputChange(e, 'strategyClass')}\r\n            >\r\n              <MenuItem value={140}>140</MenuItem>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={11}>11</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <StrategyCheckbox\r\n          minimizeErosion={minimizeErosion}\r\n          clearInventory={clearInventory}\r\n          clearOldAgeProductFirst={clearOldAgeProductFirst}\r\n          onInputChange={props.onInputChange}\r\n        />\r\n        <Grid item xs={6}>\r\n          <FormControl className='form-control'>\r\n            <TextField\r\n              name='strategy name'\r\n              label='Class Weeks Of Supply'\r\n              variant='outlined'\r\n              type='text'\r\n              placeholder='Weeks Of Supply'\r\n              required\r\n              value={strategyWOS}\r\n              onChange={e => onInputChange(e, 'strategyWOS')}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Constraints\r\n          strategyConstraints={strategyConstraints}\r\n          onInputChange={props.onInputChange}\r\n        />\r\n      </form>\r\n      <Button color='primary' size='large' variant='contained' onClick={onSaveClick}> Submit </Button>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ strategyData, appStore: { isLoggedIn } }) => ({ ...strategyData, isLoggedIn })\r\n\r\nconst mapdispatchtoprops = {\r\n  ...CreateStrategyAction,\r\n  showError: SnackbarAction.show,\r\n  onRouteChange: AppAction.onRouteChange\r\n}\r\nexport default connect(mapStateToProps, mapdispatchtoprops)(CreateEditStrategy)\r\n","import React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nexport default function ({ data }) {\r\n  return (\r\n    <Grid container>\r\n      <Grid container className='summary-header'>\r\n        <Grid item xs={8}>Strategy Input</Grid>\r\n        <Grid item xs={4}>Value</Grid>\r\n      </Grid>\r\n      <Grid container >\r\n        <Grid item xs={8}>Weeks Of Supply</Grid>\r\n        <Grid item xs={4}>{data.WOS}</Grid>\r\n      </Grid>\r\n      <Grid container >\r\n        <Grid item xs={8}>Max Step</Grid>\r\n        <Grid item xs={4}>{data.maxStep}</Grid>\r\n      </Grid>\r\n      <Grid container >\r\n        <Grid item xs={8}>Min Step</Grid>\r\n        <Grid item xs={4}>{data.minStep}</Grid>\r\n      </Grid>\r\n      <Grid container >\r\n        <Grid item xs={8}>Max Discount</Grid>\r\n        <Grid item xs={4}>{data.minDisc}</Grid>\r\n      </Grid>\r\n      <Grid container >\r\n        <Grid item xs={8}>Min Discount</Grid>\r\n        <Grid item xs={4}>{data.minDisc}</Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nexport default function ({ data }) {\r\n  return (\r\n    <Grid container>\r\n      <Grid container className='summary-header' >\r\n        <Grid item xs={8}>Forcasted Results</Grid>\r\n        <Grid item xs={4}>Value</Grid>\r\n      </Grid>\r\n      <Grid container >\r\n        <Grid item xs={8}>Weeks Of Supply</Grid>\r\n        <Grid item xs={4}>{data.WOS}</Grid>\r\n      </Grid>\r\n      <Grid container >\r\n        <Grid item xs={8}>Erosion $</Grid>\r\n        <Grid item xs={4}>{data.erosion}</Grid>\r\n      </Grid>\r\n      <Grid container >\r\n        <Grid item xs={8}>EOH $</Grid>\r\n        <Grid item xs={4}>{data.EOH}</Grid>\r\n      </Grid>\r\n      <Grid container >\r\n        <Grid item xs={8}>EOH Units</Grid>\r\n        <Grid item xs={4}>{data.EOHUnits}</Grid>\r\n      </Grid>\r\n      <Grid container >\r\n        <Grid item xs={8}>Avg OB %</Grid>\r\n        <Grid item xs={4}>{data.avgOBDisc}</Grid>\r\n      </Grid>\r\n      <Grid container >\r\n        <Grid item xs={8}>Sales Units</Grid>\r\n        <Grid item xs={4}>{data.salesUnits}</Grid>\r\n      </Grid>\r\n      <Grid container >\r\n        <Grid item xs={8}>COGS</Grid>\r\n        <Grid item xs={4}>{data.COGS}</Grid>\r\n      </Grid>\r\n      <Grid container >\r\n        <Grid item xs={8}>Recovery Rate</Grid>\r\n        <Grid item xs={4}>{data.recoveryRate}</Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Grid, Paper } from '@material-ui/core'\r\nimport { summaryAction, AppAction } from '../../redux'\r\nimport { getRouteChangeEffect, getLogoutEffect } from '../../utils'\r\nimport StrategyInput from './strategy_input'\r\nimport ForcastResults from './forcast_results'\r\n\r\nconst RenderSummaryItem = ({ summaryList }) => {\r\n  return summaryList.map((item, index) => {\r\n    return (\r\n      <Grid key={index} item xs={12} sm={6} lg={4}>\r\n        <Paper className='summary-item'>\r\n          <StrategyInput data={item.strategyInput} />\r\n          <ForcastResults data={item.forecastResults} />\r\n          <span className='input-group-btn'>\r\n            <Link to='/strategy_roll_up'>See more detail</Link>\r\n          </span>\r\n        </Paper>\r\n      </Grid>\r\n    )\r\n  })\r\n}\r\nconst Summary = props => {\r\n  const { summaryList, isLoggedIn, history, getSummary, onRouteChange } = props\r\n  useEffect(getLogoutEffect(history, isLoggedIn), [isLoggedIn])\r\n  useEffect(() => { isLoggedIn && getSummary() }, [isLoggedIn, getSummary])\r\n  useEffect(getRouteChangeEffect(history, onRouteChange))\r\n  return (\r\n    <div className='summary-container'>\r\n      <Grid container spacing={2} wrap='wrap'>\r\n        <RenderSummaryItem summaryList={summaryList} />\r\n        <Grid item xs={12} sm={6} lg={4}>\r\n          <Link to='/create_strategy' className='add-summary-container'>\r\n            <Paper className='summary-item add-summary'>\r\n              <div>Add Another</div><div>Strategy</div>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ summaryList, appStore: { isLoggedIn } }) => ({ summaryList, isLoggedIn })\r\n\r\nexport default connect(mapStateToProps, { ...summaryAction, onRouteChange: AppAction.onRouteChange })(Summary)\r\n","import React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nexport default function ({ data }) {\r\n  return (\r\n    <Grid container>\r\n      <Grid container className='roll-up-header'>\r\n        <Grid item xs={2}>SKU</Grid>\r\n        <Grid item xs={3}>SKU Description</Grid>\r\n        <Grid item xs={1}>Avg OB %</Grid>\r\n        <Grid item xs={1}>Erosion $</Grid>\r\n        <Grid item xs={1}>WOS</Grid>\r\n        <Grid item xs={1}>EOH Units</Grid>\r\n        <Grid item xs={1}>Sales Units</Grid>\r\n        <Grid item xs={1}>COGS</Grid>\r\n        <Grid item xs={1}>Recovery Rate</Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={2}>{data.SKU}</Grid>\r\n        <Grid item xs={3}>{data.SKUDesc}</Grid>\r\n        <Grid item xs={1}>{data.avgOBDisc}</Grid>\r\n        <Grid item xs={1}>{data.erosion}</Grid>\r\n        <Grid item xs={1}>{data.WOS}</Grid>\r\n        <Grid item xs={1}>{data.EOHUnits}</Grid>\r\n        <Grid item xs={1}>{data.salesUnits}</Grid>\r\n        <Grid item xs={1}>{data.COGS}</Grid>\r\n        <Grid item xs={1}>{data.recoveryRate}</Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nexport default function ({ data }) {\r\n  return (\r\n\r\n    <Grid container>\r\n      <Grid container className='summary-header'>\r\n        <Grid item xs={12}>TV's - 4k- Holiday</Grid>\r\n      </Grid>\r\n      <Grid container className='roll-up-header'>\r\n        <Grid item xs={2}>Class</Grid>\r\n        <Grid item xs={3}>Class Description</Grid>\r\n        <Grid item xs={1}>Avg OB %</Grid>\r\n        <Grid item xs={1}>Erosion $</Grid>\r\n        <Grid item xs={1}>WOS</Grid>\r\n        <Grid item xs={1}>EOH Units</Grid>\r\n        <Grid item xs={1}>Sales Units</Grid>\r\n        <Grid item xs={1}>COGS</Grid>\r\n        <Grid item xs={1}>Recovery Rate</Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={2}>{data.className}</Grid>\r\n        <Grid item xs={3}>{data.classDesc}</Grid>\r\n        <Grid item xs={1}>{data.avgOBDisc}</Grid>\r\n        <Grid item xs={1}>{data.erosion}</Grid>\r\n        <Grid item xs={1}>{data.WOS}</Grid>\r\n        <Grid item xs={1}>{data.EOHUnits}</Grid>\r\n        <Grid item xs={1}>{data.salesUnits}</Grid>\r\n        <Grid item xs={1}>{data.COGS}</Grid>\r\n        <Grid item xs={1}>{data.recoveryRate}</Grid>\r\n      </Grid>\r\n    </Grid>\r\n\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Grid, Paper } from '@material-ui/core'\r\nimport { strategySummaryRollUpAction, AppAction } from '../../redux'\r\nimport { getRouteChangeEffect, getLogoutEffect } from '../../utils'\r\n// import StrategyInput from './strategy_input'\r\n// import ForcastResults from './forcast_results'\r\nimport SkuLevelStrategySummary from './sku_level_strategy_summary'\r\nimport ClassLevelStrategySummary from './class_level_strategy_summary'\r\n\r\nconst RenderSummaryItem = ({ strategyRollUpSummaryList }) => {\r\n  return strategyRollUpSummaryList.map((item, index) => {\r\n    return (\r\n      <Grid key={index} item xs={12}>\r\n        <Paper className='summary-item'>\r\n          <ClassLevelStrategySummary data={item.classLevelSummary} />\r\n          <SkuLevelStrategySummary data={item.skuLevelSummary} />\r\n        </Paper>\r\n      </Grid>\r\n    )\r\n  })\r\n}\r\nconst StrategyRollUpSummary = props => {\r\n  const { strategyRollUpSummaryList, isLoggedIn, history, getSkuLevelSummary, onRouteChange } = props\r\n  useEffect(getLogoutEffect(history, isLoggedIn), [isLoggedIn])\r\n  useEffect(() => { isLoggedIn && getSkuLevelSummary() }, [isLoggedIn, getSkuLevelSummary])\r\n  useEffect(getRouteChangeEffect(history, onRouteChange))\r\n  return (\r\n    <div className='summary-container'>\r\n      <Grid container spacing={2} wrap='wrap'>\r\n        <RenderSummaryItem strategyRollUpSummaryList={strategyRollUpSummaryList} />\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ strategyRollUpSummaryList, appStore: { isLoggedIn } }) => ({ strategyRollUpSummaryList, isLoggedIn })\r\n\r\nexport default connect(mapStateToProps, { ...strategySummaryRollUpAction, onRouteChange: AppAction.onRouteChange })(StrategyRollUpSummary)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Route, Redirect, Switch, BrowserRouter } from 'react-router-dom'\r\nimport { Snackbar } from '@material-ui/core'\r\n\r\nimport { SnackbarAction } from '../redux'\r\nimport { Header } from '../components'\r\n\r\nimport Login from './login'\r\nimport NotFound from './not_found'\r\nimport CreateStrategy from './create_strategy'\r\nimport Summary from './summary'\r\nimport StrategyRollUpSummary from './strategy_roll_up'\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Header />\r\n      <div className='main-wrapper'>\r\n        <Switch>\r\n          <Route exact path='/' component={Login} />\r\n          <Route exact path='/404' component={NotFound} />\r\n          <Route exact path='/login' component={Login} />\r\n          <Route exact path='/create_strategy' component={CreateStrategy} />\r\n          <Route exact path='/summary' component={Summary} />\r\n          <Route exact path='/strategy_roll_up' component={StrategyRollUpSummary} />\r\n          <Redirect to='/404' />\r\n        </Switch>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n          open={props.snackbarStatus}\r\n          key='topBottom'\r\n          autoHideDuration={2000}\r\n          onClose={props.handleSnackbarClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id'\r\n          }}\r\n          message={<span id='message-id'>{props.snackbarText}</span>}\r\n        />\r\n      </div>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps ({ snackbarStore }) {\r\n  return {\r\n    snackbarStatus: snackbarStore.open || false,\r\n    snackbarText: snackbarStore.data || ''\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { handleSnackbarClose: SnackbarAction.hide })(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport interceptor from './interceptor'\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\r\n\r\nimport { configureStore } from './redux'\r\nimport './styles/index.scss'\r\nimport App from './routes'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: '#0b66af' },\r\n    secondary: { main: '#686868' }\r\n  }\r\n})\r\nconst reduxState = {}\r\nconst store = configureStore(reduxState)\r\ninterceptor.setupInterceptors(store)\r\nconst renderDom = (\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <App />\r\n    </MuiThemeProvider>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(renderDom, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}